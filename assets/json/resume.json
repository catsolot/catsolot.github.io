{"basics":{"name":"Milo Craun","label":"Graduate Student","image":"","email":"miloc@vt.edu","phone":"","url":"https://milocraun.com/","summary":"A graduate student at Virginia Tech researching safe kernel extensions.","location":{"address":"220 Gilbert St","postalCode":"VA 24060","city":"Blacksburg","countryCode":"US","region":"Virginia"},"profiles":[]},"work":[{"name":"Virginia Tech","position":"Research Assistant","url":"","startDate":"2023-05","endDate":"Present","summary":"Researching extending eBPF in the Linux kernel."}],"volunteer":[],"education":[{"institution":"Virginia Tech, Blacksburg, Virginia","location":"Blacksburg, Virginia","url":"https://www.cs.vt.edu/","area":"Computer Science","studyType":"MS","startDate":"2024-08","endDate":""},{"institution":"Virginia Tech, Blacksburg, Virginia","location":"Blacksburg, Virginia","url":"https://www.cs.vt.edu/","area":"Computer Science","studyType":"BS","startDate":"2021-08","endDate":"2024-05","score":"4.0"}],"awards":[],"certificates":[],"publications":[{"name":"Eliminating eBPF Tracing Overhead on Untraced Processes","publisher":"Proceedings of the ACM SIGCOMM 2024 Workshop on EBPF and Kernel Extensions","releaseDate":"2024","url":"https://doi.org/10.1145/3672197.3673431","summary":"Attaching tracing eBPF programs to hookpoints causes them to run for any process that triggers the hookpoint. This results in overhead for processes we do not want to trace. We propose a system that uses virtual memory mappings to provide each process its own view of kernel hookpoints, allowing for no overhead on untraced processes"},{"name":"Enabling eBPF on Embedded Systems Through Decoupled Verification","publisher":"Proceedings of the 1st Workshop on EBPF and Kernel Extensions","releaseDate":"2023-09-10","url":"https://dl.acm.org/doi/10.1145/3609021.3609299","summary":"We can enable the usage of eBPF on resource constrained embedded devices by moving eBPF verification outside of the kernel and away from load time."}],"skills":[],"languages":[],"interests":[{"name":"Computer Science","icon":"fa-solid fa-tag","keywords":["Operating Systems","Safe Kernel Extension"]}],"references":[],"projects":[]}